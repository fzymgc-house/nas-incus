################################
# ðŸ¦Ž KOMODO COMPOSE - MONGO ðŸ¦Ž #
################################

## This compose file will deploy:
##   1. PostgreSQL (as FerretDB's backend)
##   2. FerretDB (MongoDB-compatible API server)
##   3. Komodo Core
##   4. Komodo Periphery

services:
  postgres:
    # Recommended: Pin to a specific version
    # https://github.com/FerretDB/documentdb/pkgs/container/postgres-documentdb
    image: ghcr.io/ferretdb/postgres-documentdb:17-0.105.0-ferretdb-2.4.0
    labels:
      komodo.skip: # Prevent Komodo from stopping with StopAllContainers
    restart: unless-stopped
    volumes:
      - /mnt/data/komodo/data/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "{{ lookup('community.general.onepassword', 'komodo-secrets', field='db_user', vault='fzymgc-house') }}"
      POSTGRES_PASSWORD: "{{ lookup('community.general.onepassword', 'komodo-secrets', field='db_password', vault='fzymgc-house') }}"
      POSTGRES_DB: postgres
    networks:
      internal:
        aliases:
          - postgres
          - db

  ferretdb:
    # Recommended: Pin to a specific version
    # https://github.com/FerretDB/FerretDB/pkgs/container/ferretdb
    image: ghcr.io/ferretdb/ferretdb:2.4.0
    labels:
      komodo.skip: # Prevent Komodo from stopping with StopAllContainers
    restart: unless-stopped
    depends_on:
      - postgres
    volumes:
      - /mnt/data/komodo/data/ferretdb:/state
    environment:
      FERRETDB_POSTGRESQL_URL: postgres://{{ lookup('community.general.onepassword', 'komodo-secrets', field='db_user', vault='fzymgc-house') }}:{{ lookup('community.general.onepassword', 'komodo-secrets', field='db_password', vault='fzymgc-house') }}@postgres:5432/postgres
    networks:
      internal:
        aliases:
          - ferretdb
          - mongo
  core:
    image: ghcr.io/moghtech/komodo-core:${COMPOSE_KOMODO_IMAGE_TAG:-latest}
    labels:
      komodo.skip: # Prevent Komodo from stopping with StopAllContainers
    restart: unless-stopped
    depends_on:
      - ferretdb
    ports:
      - 9120:9120
    networks:
      main-bridge:
        aliases:
          - komodo-core
          - komodo
      internal:
        aliases:
          - komodo-core
          - komodo
    volumes:
      ## Core cache for repos for latest commit hash / contents
      - repo-cache:/repo-cache
      ## Store sync files on server
      - /mnt/data/komodo/data/syncs:/syncs
      ## Optionally mount a custom core.config.toml
      - /mnt/data/komodo/config.toml:/config/config.toml
      ## Mount CA certificates for Komodo to use
      - /etc/ssl/certs:/etc/ssl/certs:ro
    ## Allows for systemd Periphery connection at
    ## "http://host.docker.internal:8120"
    # extra_hosts:
    #   - host.docker.internal:host-gateway

  ## Deploy Periphery container using this block,
  ## or deploy the Periphery binary with systemd using
  ## https://github.com/moghtech/komodo/tree/main/scripts
  periphery:
    image: ghcr.io/moghtech/komodo-periphery:${COMPOSE_KOMODO_IMAGE_TAG:-latest}
    labels:
      komodo.skip: # Prevent Komodo from stopping with StopAllContainers
    restart: unless-stopped
    networks:
      - internal
    volumes:
      ## Mount external docker socket
      - /var/run/docker.sock:/var/run/docker.sock
      ## Allow Periphery to see processes outside of container
      - /proc:/proc
      ## Specify the Periphery agent root directory.
      ## Must be the same inside and outside the container,
      ## or docker will get confused. See https://github.com/moghtech/komodo/discussions/180.
      ## Default: /etc/komodo.
      - ${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}:${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}

volumes:
  repo-cache:

networks:
  main-bridge:
    external: true
  internal:
    name: komodo-internal