#cloud-config
groups:
  - apps: [root]
ntp:
  enabled: true
  ntp_client: chrony
  pools: [0.us.pool.ntp.org,1.us.pool.ntp.org]
  servers: [ 192.168.20.1, 192.168.20.151, 192.168.20.152, 192.168.20.153 ]
no_ssh_fingerprints: true
package_update: true
package_upgrade: true
package_reboot_if_required: true
packages:
  - apt-transport-https
  - build-essential
  - ca-certificates
  - curl
  - debian-archive-keyring
  - debian-keyring
  - docker-compose
  - docker.io
  - gnupg
  - gpg
  - jq
  - libicu-dev
  - libssl-dev
  - lsb-release
  - nodejs
  - npm
  - python3
  - python3-pip
  - python3-venv
  - software-properties-common
  - ssh
  - ssh-import-id
  - sudo
  - unzip

ssh:
  emit_keys_to_console: false
timezone: America/New_York
users:
  - name: fzymgc
    gecos: fzymgc
    primary_group: fzymgc
    groups: [adm, cdrom, dip, lxd, sudo]
    sudo: "ALL=(ALL) NOPASSWD:ALL"
    lock_passwd: true
    shell: /bin/bash
    ssh_authorized_keys:
    - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAILlE7jt0Nv9CBg2djK6SNR253ZmkvssUECHHVs/bKz5O
  - name: apps
    primary_group: apps
    uid: 568
    shell: /bin/bash
    lock_passwd: true
  - name: runner
    uid: 1500
    gid: 1500
    shell: /bin/bash
    groups: [docker, sudo]
    sudo: ALL=(ALL) NOPASSWD:ALL
    home: /home/runner

# Docker configuration
write_files:
  - path: /etc/systemd/resolved.conf
    owner: 'root:root'
    permissions: '0644'
    content: |
      #  This file is part of systemd.
      #
      #  systemd is free software; you can redistribute it and/or modify it under the
      #  terms of the GNU Lesser General Public License as published by the Free
      #  Software Foundation; either version 2.1 of the License, or (at your option)
      #  any later version.
      #
      # Entries in this file show the compile time defaults. Local configuration
      # should be created by either modifying this file (or a copy of it placed in
      # /etc/ if the original file is shipped in /usr/), or by creating "drop-ins" in
      # the /etc/systemd/resolved.conf.d/ directory. The latter is generally
      # recommended. Defaults can be restored by simply deleting the main
      # configuration file and all drop-ins located in /etc/.
      #
      # Use 'systemd-analyze cat-config systemd/resolved.conf' to display the full config.
      #
      # See resolved.conf(5) for details.

      [Resolve]
      # Some examples of DNS servers which may be used for DNS= and FallbackDNS=:
      # Cloudflare: 1.1.1.1#cloudflare-dns.com 1.0.0.1#cloudflare-dns.com 2606:4700:4700::1111#cloudflare-dns.com 2606:4700:4700::1001#cloudflare-dns.com
      # Google:     8.8.8.8#dns.google 8.8.4.4#dns.google 2001:4860:4860::8888#dns.google 2001:4860:4860::8844#dns.google
      # Quad9:      9.9.9.9#dns.quad9.net 149.112.112.112#dns.quad9.net 2620:fe::fe#dns.quad9.net 2620:fe::9#dns.quad9.net
      DNS=192.168.20.1
      #FallbackDNS=
      Domains=fzymgc.house
      #DNSSEC=no
      #DNSOverTLS=no
      MulticastDNS=yes
      LLMNR=yes
      #Cache=yes
      #CacheFromLocalhost=no
      #DNSStubListener=no
      #DNSStubListenerExtra=
      #ReadEtcHosts=yes
      #ResolveUnicastSingleLabel=no
      #StaleRetentionSec=0
  - path: /etc/docker/daemon.json
    content: |
      {
        "log-driver": "json-file",
        "log-opts": {
          "max-size": "10m",
          "max-file": "3"
        },
        "storage-driver": "overlay2"
      }

# Runner directories and permissions
runcmd:
  - groupmod -g 568 apps
  - systemctl enable --now ssh
  # Enable and start Docker
  - systemctl enable docker
  - systemctl start docker

  # Create runner directories
  - mkdir -p /home/runner/actions-runner
  - mkdir -p /home/runner/workspace
  - mkdir -p /home/runner/.config

  # Set ownership
  - chown -R runner:runner /home/runner

  # Add runner user to docker group
  - usermod -aG docker runner

  # Configure git for runner user
  - sudo -u runner git config --global init.defaultBranch main
  - sudo -u runner git config --global user.name "GitHub Runner"
  - sudo -u runner git config --global user.email "runner@localhost"

  # Install GitHub CLI
  - |
    curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
    chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null
    apt-get update
    apt-get install -y gh

  # Configure systemd service for runner (placeholder - will be configured by Ansible)
  - |
    cat > /etc/systemd/system/github-runner.service << 'EOF'
    [Unit]
    Description=GitHub Actions Runner
    After=network.target docker.service
    Wants=docker.service

    [Service]
    Type=simple
    User=runner
    Group=runner
    WorkingDirectory=/home/runner/actions-runner
    ExecStart=/home/runner/actions-runner/run.sh
    Restart=always
    RestartSec=10
    KillMode=process
    KillSignal=SIGTERM
    TimeoutStopSec=5

    [Install]
    WantedBy=multi-user.target
    EOF

  # Don't enable the service yet - Ansible will handle registration and enablement
  - systemctl daemon-reload